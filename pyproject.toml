[project]
name = "DocAI"
version = "0.0.1"
description = "Document AI"
authors = [{ name = "Adrian Yeung", email = "yeungadrianjy@gmail.com" }]
readme = "README.md"
keywords = ['python']
requires-python = ">=3.11,<4.0"
dependencies = [
    "pydantic>=2.10.4",
    "python-docx>=1.1.2",
    "tabulate>=0.9.0",
]

[dependency-groups]
dev = [
    "pre-commit>=4.0.1",
    "pytest>=8.3.4",
    "tox-uv>=1.11.3",
]

[tool.ruff]
line-length = 120
fix = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
  'F',      # Pyflakes
  'E',      # pycodestyle (Error)
  'I',      # isort
  'D',      # pydocstyle
  'UP',     # pyupgrade
  'YTT',    # flake8-2020
  'B',      # flake8-bugbear
  'T10',    # flake8-debugger
  'T20',    # flake8-print
  'C4',     # flake8-comprehensions
]
ignore = [
  "D401",    # non-imperative-mood
  "D105",    # undocumented-magic-method
  "D107",    # undocumented-public-init
]
pydocstyle = { convention = 'numpy' }
pycodestyle = { max-doc-length = 120 }

[tool.ruff.lint.per-file-ignores]
'tests/*' = ['D']

[tool.mypy]
files = ["docai"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
strict = true
enable_error_code = [
  "redundant-expr",
  "truthy-bool",
  "ignore-without-code",
]
disallow_untyped_decorators = false
